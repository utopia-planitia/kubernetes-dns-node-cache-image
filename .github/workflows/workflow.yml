name: CI/CD
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  Hadolint:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: lint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          failure-threshold: style
          ignore: DL3018,DL4006
  Docker:
    needs: hadolint
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: amd64
          push: false
          cache-to: type=local,dest=/tmp/.buildx-cache
          cache-from: type=registry,ref=ghcr.io/utopia-planitia/kubernetes-dns-node-cache-image:cache,ignore-error=true
      - name: Extract versions
        if: github.event_name != 'pull_request'
        run: |
          set -eux
          IPTABLES_VERSION="$(grep -Eom1 'IPTABLES_VERSION=[0-9]+\.[0-9]+\.[0-9]+\S*' Dockerfile | cut -d= -f2)"
          echo "IPTABLES_VERSION=${IPTABLES_VERSION:?}" | tee -a "${GITHUB_ENV:?}"
          KUBERNETES_DNS_VERSION="$(grep -Eom1 'KUBERNETES_DNS_VERSION=[0-9]+\.[0-9]+\.[0-9]+\S*' Dockerfile | cut -d= -f2)"
          echo "KUBERNETES_DNS_VERSION=${KUBERNETES_DNS_VERSION:?}" | tee -a "${GITHUB_ENV:?}"
      - name: Prepare metadata
        if: github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/utopia-planitia/kubernetes-dns-node-cache-image
          tags: |
            type=match,pattern=^(\d+\.\d+\.\d+-iptables\d+\.\d+\.\d+\S*)$,group=1,value=${{ env.KUBERNETES_DNS_VERSION }}-iptables${{ env.IPTABLES_VERSION }}
            type=match,pattern=^(\d+\.\d+\.\d+-iptables\d+\.\d+\.\d+)\S*$,group=1,value=${{ env.KUBERNETES_DNS_VERSION }}-iptables${{ env.IPTABLES_VERSION }}
            type=match,pattern=^(\d+\.\d+\.\d+)-iptables\d+\.\d+\.\d+\S*$,group=1,value=${{ env.KUBERNETES_DNS_VERSION }}-iptables${{ env.IPTABLES_VERSION }}
          flavor: |
            latest=true
      - name: Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v4
        with:
          context: .
          labels: ${{ steps.meta.outputs.labels }}
          platforms: amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=registry,ref=ghcr.io/utopia-planitia/kubernetes-dns-node-cache-image:cache,mode=max
