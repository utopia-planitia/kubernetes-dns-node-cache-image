{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    ":disableRateLimiting",
    "docker:pinDigests",
    "helpers:pinGitHubActionDigests",
    "regexManagers:dockerfileVersions",
    "workarounds:doNotUpgradeFromAlpineStableToEdge",
    "workarounds:reduceRepologyServerLoad"
  ],
  "separateMajorMinor": true,
  "separateMultipleMajor": true,
  "separateMinorPatch": true,
  "automerge": true,
  "automergeType": "pr",
  "platformAutomerge": true,
  "labels": [
    "bot",
    "renovate-bot"
  ],
  "packageRules": [
    {
      "matchPackageNames": [
        "kubernetes/dns"
      ],
      "automerge": false
    },
    {
      "description": "Disable major, minor and patch updates of iptables because it needs to be updated (manually, for now) in sync with the other components in our clusters.",
      "matchPackagePatterns": [
        "^alpine_\\d+_\\d+\/iptables$"
      ],
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch"
      ],
      "automerge": false
    }
  ],
  "regexManagers": [
    {
      "description": "update Alpine versions in repology repositories annotations like \"# renovate: datasource=repology depName=alpine_3_17/iptables\"",
      "matchStrings": [
        "# renovate: datasource=repology depName=alpine_(?<currentValue>\\d+[._]\\d+)"
      ],
      "fileMatch": [
        "^Dockerfile$"
      ],
      "currentValueTemplate": "{{{ replace '_' '.' currentValue }}}",
      "datasourceTemplate": "docker",
      "depNameTemplate": "docker.io/library/alpine",
      "versioningTemplate": "regex:^(?<major>\\d+)[._](?<minor>\\d+)$",
      "autoReplaceStringTemplate": "# renovate: datasource=repology depName=alpine_{{{newMajor}}}_{{{newMinor}}}"
    },
    {
      "description": "use build and revision versions to update alpine versions in Docker tags like golang:1.20.3-alpine3.16",
      "matchStrings": [
        "FROM (?<depName>[^:\\s]+):(?<currentValue>[a-zA-Z0-9_][a-zA-Z0-9_.-]{0,127})(?:@(?<currentDigest>sha256:[a-zA-Z0-9]{64}))?"
      ],
      "fileMatch": [
        "^Dockerfile$"
      ],
      "datasourceTemplate": "docker",
      "versioningTemplate": "regex:^(?:(?<major>\\d+)(?:\\.(?<minor>\\d+)(?:\\.(?<patch>\\d+))?)?-)?alpine(?<build>\\d+)(?:\\.(?<revision>\\d+))?$"
    }
  ]
}
